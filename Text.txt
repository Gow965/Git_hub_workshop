
Version Control system
centralized
Centralized Version Contol system(CVS)
Ex:CVS and Apache SubVersion(SVN)
Loss of data,less accuracy,time consuming and difficult to track
distributed

Git,Mercurial & Baazaar
More accuracy, more accurate
Inorder to work with source code/project in companies the employess have to collectively do the project

Git
It is a free & open source disrtibuted version control system designed to handle everything from small to very large projects with speed and efficiency.
For s/w eng version control system is a class of systems for managing the programs, documents and files in computer/local machine.
which is a source code management system
That let you manage and keep track of your source code history.
Installation process
you can download & install from official website "git-scm.com"
where scm stands for source code management
Basic git commands
git --version
tells the version of git
git config --global user.name "username" or git config user.name "name"
git config --global user.email "mail_id" or git config user.email "mail_id"
you have to tell the git who you are globally.
git config user.name(enter)
gt confir user.email(enter)
this will check the configured user(i.e., who is making changes and accessing
Working with git
create sample folder
sample
git init(Initiaze the git here)
you will get .git hidden file
touch index.html
it will create the index.html file.
touch is the command to create a file
touch aboutus.html
touch contactus.html
these files also will be created
git status
checks the status of git.
commits or no commits
cat index.html
cat:command to see the content in that file so, it will display the content in that index.html file
if you think you reached the place where you have to store the files(staging area), then you need to add the above files to the staging area.
inorder to add these files,
git add filename:
git add index.html(single)
mutliple files(separate them by space)
git add index.html aboutus.html contactus.html contactus.htm;
all the files in that pwd
git add .
git rm --cached filename
git rm --cached contactus.htm;
remove the file if you want to make changes
git status
check the status above file will be removed
make the changes in the file and then add all the files, finally check the status of the git

git commit -m "message"
git commit -m "all the files were committed"
files will be moved to the repository after commit only
SHA key

40 char length id will be created
SHA stands for "Secure Hash Algorithm"
it is present at first of git log details

git log

git log command displays configured user details(user details&time) and why this user has made a commit(commit message)
A repository have as many no.of commits they have
If you want to add more and more files the process is same for all
after adding the new files later after commnits

git add .
git commit -m "commit message"
git log(checks how many commits done til yet)
after doing 3 to 4 commits

if you want to be give the code present in the second commit(you can say 2nd version of the project) file
git log --oneline
gives the all commits details
now you need to goback to the version you want
copy the 7(actually 40)SHA character beside of the version
git checkout 410bda6(7 char key)
but if you use this your next files can not be seen as committed.(HEAD) will be on 2nd commit only(actually you came back to 2nd version)
if you want to comeback again
git checkout master
Solution2
git checkout HEAD~1
digit represents the steps you want to goback
git checkout master
you will be directed to origin
git hub
we will use git hub to host our project
it provides the access control and collaborative features such as task management,bug tracking, feature requires
create a new repository in githubwith the same name in your local machine without readme file
copy the url of repository available in github
copied link is called as remote
git remote
command to see the previously added remotes
git remote add variable name link
git remote add sample https://github.com/Ruthu417/sample.git
now check git remote(you will see sample file there) as added now itself
git push sample master
sample is responsible for that link(changes too)
master branch of code to master branch of remote repository
the commits what we did in the sample are synced to remote repository so that here we have 3 commits
Working with remote repository
rename,edit&delete
if remote is not there, then add
git add remote resume https://github.com/Ruthu417/resume.git
Renaming the remote repository
ex: git remote rename old new
git remote rename resume new_resume
you will see renamed repository
Removing the repository
git remote remove new_resume
git remote
Clone/download any public file
git clone https://github.com/Ruthu417/Ruthu417.github.io.git
downloaded & extacted automatically
cd Ruthu417.github.io
git rev-list --count HEAD
counts the no.of commits in that repository
BitBucket
similar to github you can also store files in bitbucket
All the repositories in this are private by default
Branches,pull requests & pages
git branch
gives the no.of branches in the project
add new branch
git branch branch_name
ex: git branch feature
as soon as executing this cmd, the code in master branch will be copied into new one
now check branches using command "git branch"

now you are in master branch, if you want to switch to feature branch
git checkout feature (switched to feature branch)
git branch -d feature
deteles the feature branch
Pull requests

git clone url(downloading file:ex:multidimensions)
git branch
git branch feature
git checkout feature
touch file4.txt
echo "new content in this file"
git add .
git commit -m "feature.txt added"
git remote
git push remotename feature
Github pages
In [2]:
git --version
''' git init
git config user.name
git config user.email '''
#Process of adding files and commits
''' git add file
git add .
git commit -m "commit message"
git status
git log
git log --oneline '''
# if 3 or more commits were done
''' git checkout SHA key(7 char length) '''
#renaming the commit message
''' git commit --amend -m "new message" '''
# reversing the git order
git log --oneline --reverse

#delete the single commit
git reset --hard HEAD
# multiple commits
git reset --hard HEAD~2
  File "<ipython-input-2-3a3b6dd7b840>", line 17
    git log --oneline --reverse
          ^
SyntaxError: invalid syntax
In [ ]:

